/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export const enum FieldType {
  Number = 0,
  String = 1
}
export const enum Comparison {
  Eq = 0,
  Lt = 1,
  Le = 2,
  Gt = 3,
  Ge = 4
}
export const enum MergeStrategy {
  Or = 0,
  And = 1,
  AndNot = 2
}
export const enum DeduplicateStrategy {
  KeepAll = 0,
  KeepFirst = 1,
  RemoveSimilar = 2,
  Reduce = 3,
  CrossJoin = 4,
  CrossJoinAndRemoveSimilar = 5
}
export interface MergeOptions {
  output: string
  mergeStrategy: MergeStrategy
  deduplicateStrategy: DeduplicateStrategy
  leftKey: string
  rightKey: string
  isNumberKey?: boolean
  outputHeaderCallback?: (columnName: string) => string | undefined
}
export function merge(leftPath: string, rightPath: string, options: MergeOptions): Promise<void>
export type JsFilter = Filter
export class Filter {
  constructor(field: string, value: string, fieldType?: FieldType | undefined | null, comparison?: Comparison | undefined | null)
}
export type JsTransform = Transform
export class Transform {
  constructor(path: string)
  withDelimiter(delimiter: number): void
  appendLineNumber(): void
  addFilter(filter: Filter): void
  setColumnsTransform(columnTransform: (...args: any[]) => any): void
  saveCsv(path: string): Promise<void>
}
